import gym

env = gym.make("FrozenLake-v0")
observation = env.reset()
for _ in range(1000):
	env.render()
	action = env.action_space.sample()
	observation, reward, done, info = env.step(action)

############################################33

Q = np.zeros(observation_space,action_space)

num_episodes = 2000

rList = []
import random as pr

def rargmax(vector):
	m = np.amax(vector)
	indices = np.nonzero(vector ==m)[0]
	return pr.choice(indices)

for i in range(num_episodes):
	state = env.reset()
	rAll = 0 
	done =False

	while not done:
		action = rargmax(Q[state,:])
		new_state, reward, done,_ = env.step(action)
		Q[state,action] = reward + np.max(Q[new_state,:])
		state = new_state


######################

for i in range(1000):
	e = 0.1 / (i+1)
	while not done:
		if np.random.rand(1)<e:
			action = env.action_space.sample()
		else :
			action = np.argmax(Q[state,:])

####################

action = np.argmax(Q[state,:] + np.random.randn(1,env.action_space.n)/(i+1))

dis = 0.99

Q[state,action] = reward + dis * np.max(Q[new_sate,:])


#########################

Q(s,a) = (1-a)Q + a (r + max Q(s',a') )

########################

